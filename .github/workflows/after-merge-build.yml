name: Build and Deploy Custom Image

on:
  pull_request:
    types:
      - closed

jobs:
  run-tests-buildArtifact:
    name: Run Integration Tests
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: 1.Checkout repository
        uses: actions/checkout@v3

      - name: Setup MySQL
        uses: shogo82148/actions-setup-mysql@v1
        env:
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          WEBAPP_SECRET_KEY: ${{ secrets.WEBAPP_SECRET_KEY }}
          WEBAPP_AES_SECRET_KEY: ${{ secrets.WEBAPP_AES_SECRET_KEY }}
          WEBAPP_PUBLIC_KEY: ${{ secrets.WEBAPP_PUBLIC_KEY }}
          WEBAPP_PRIVATE_KEY: ${{ secrets.WEBAPP_PRIVATE_KEY }}
        with:
          mysql-version: '8.0'
          root-password:  ${{ secrets.MYSQL_PASSWORD }}
          auto-start: 'true'

      - name: 2.Run database tests
        run: |
          mysql -u root -p"${{ secrets.MYSQL_PASSWORD }}" -e "CREATE DATABASE test_db;"

      - name: 3.Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 4.Create .env file
        run: |
          pwd
          ls -al
          cat <<EOF > ./webappFlask/app/webapp.env
          MYSQL_USERNAME=${{ secrets.MYSQL_USERNAME }}
          MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
          WEBAPP_SECRET_KEY=${{ secrets.WEBAPP_SECRET_KEY }}
          WEBAPP_AES_SECRET_KEY=${{ secrets.WEBAPP_AES_SECRET_KEY }}
          WEBAPP_PUBLIC_KEY=${{ secrets.WEBAPP_PUBLIC_KEY }}
          WEBAPP_PRIVATE_KEY=${{ secrets.WEBAPP_PRIVATE_KEY }}
          EOF

      - name: Verify .env
        run: |
          pwd
          ls -al
          cat ./webappFlask/app/webapp.env | grep -v 'MYSQL_USERNAME'


      - name: 4.Install dependencies and Run tests
        run: | 
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r ./webappFlask/requirements.txt && pwd && ls -al && cd ./webappFlask && pip list
          pip install flask-sqlalchemy
          
          python3 manage.py runserver &
          sleep 5
          pytest ./test/test_healthz.py



      - name: 6.Build-Artifact
        run: |
          pwd
          ls -al
          tar -czvf webappFlask.tar.gz webappFlask
          mv webappFlask.tar.gz  ./packer
          tar -czvf ready2build.tar.gz packer
          ls -al
          ls -al webappFlask/
          

      - name: 7.Verify .tar.gz File
        run: tar -tzf ready2build.tar.gz


      - name: 8.Upload webapp.tar.gz as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ready2build-artifact
          path: ready2build.tar.gz
  
  # Build Custom Images
  build-aws-image:
    name: Build AWS Image
    runs-on: ubuntu-latest
    needs: run-tests-buildArtifact
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ready2build-artifact
          path: .

      - name: Install Packer
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install -y packer
          packer version  # Verifying the Installation

      - name: Check status
        run: | 
          pwd
          ls -al

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_github_action }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_github_action }}

      - name: Verify AWS CLI
        run: aws s3 ls

      - name: Verify AWS Credentials
        run: aws sts get-caller-identity

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          service_account_key: ${{ secrets.GCP_CLI_KEY_PACKER }}
          project_id: csye6225-gcp-dev

      - name: Verify GCP CLI
        run: |
          gcloud info
          gcloud auth list
          gcloud config list
          

      - name: Validate packer and build
        run: |
          tar -xzvf ready2build.tar.gz
          cd packer
          pwd
          ls -al
          packer init machine-image.pkr.hcl
          packer fmt machine-image.pkr.hcl
          packer validate  machine-image.pkr.hcl
          
          aws ec2 describe-subnets --subnet-ids subnet-09550cd1fa139900a
          export PACKER_LOG=1
          export PACKER_LOG_PATH="packer.log"
          
          
          echo "${{ secrets.GCP_CLI_KEY_PACKER }}" > /tmp/account.json
          cat ${{ secrets.GCP_CLI_KEY_PACKER }}
          export GOOGLE_APPLICATION_CREDENTIALS="/tmp/account.json"
          
          packer build machine-image.pkr.hcl